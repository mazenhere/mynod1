name: CICD

on:
  push:
    branches:
      - cicd-docker-ec2
      - dev
      - qa
      - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t integrationninjas/nodejs-app .

      - name: Publish image to Docker Hub
        run: docker push integrationninjas/nodejs-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref in ['refs/heads/dev', 'refs/heads/qa', 'refs/heads/production']
    steps:
      - name: Pull image from Docker Hub
        run: docker pull integrationninjas/nodejs-app:latest

      - name: Stop and remove the existing container if exists
        run: docker stop nodejs-app-container || true && docker rm -f nodejs-app-container || true

      - name: Run Docker container for specific branches
        run: |
          if [ ${{ github.ref }} == 'refs/heads/dev' ]; then
            docker run -d -p 5000:5000 --name nodejs-app-container integrationninjas/nodejs-app:latest --env ENVIRONMENT=dev
          elif [ ${{ github.ref }} == 'refs/heads/qa' ]; then
            docker run -d -p 5000:5000 --name nodejs-app-container integrationninjas/nodejs-app:latest --env ENVIRONMENT=qa
          elif [ ${{ github.ref }} == 'refs/heads/production' ]; then
            docker run -d -p 5000:5000 --name nodejs-app-container integrationninjas/nodejs-app:latest --env ENVIRONMENT=production
          fi
